//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebPFileType.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WebPFileType.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Animated WebP images are not supported..
        /// </summary>
        internal static string AnimatedWebPNotSupported {
            get {
                return ResourceManager.GetString("AnimatedWebPNotSupported", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to WebP encoder API version mismatch..
        /// </summary>
        internal static string ApiVersionMismatch {
            get {
                return ResourceManager.GetString("ApiVersionMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The WebP encoder returned an I/O error..
        /// </summary>
        internal static string EncoderBadWrite {
            get {
                return ResourceManager.GetString("EncoderBadWrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The total file size must be less than 4GB..
        /// </summary>
        internal static string EncoderFileTooBig {
            get {
                return ResourceManager.GetString("EncoderFileTooBig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when encoding the WebP file..
        /// </summary>
        internal static string EncoderGenericError {
            get {
                return ResourceManager.GetString("EncoderGenericError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The WebP encoder configuration is invalid..
        /// </summary>
        internal static string EncoderInvalidConfiguration {
            get {
                return ResourceManager.GetString("EncoderInvalidConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when encoding the WebP metadata..
        /// </summary>
        internal static string EncoderMetadataError {
            get {
                return ResourceManager.GetString("EncoderMetadataError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A WebP encoder parameter is null..
        /// </summary>
        internal static string EncoderNullParameter {
            get {
                return ResourceManager.GetString("EncoderNullParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The partition is larger than 16 Mb..
        /// </summary>
        internal static string EncoderPartitionOverflow {
            get {
                return ResourceManager.GetString("EncoderPartitionOverflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Partition #0 is larger than 512 Kb..
        /// </summary>
        internal static string EncoderPartitionZeroOverflow {
            get {
                return ResourceManager.GetString("EncoderPartitionZeroOverflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insufficient memory to save the image..
        /// </summary>
        internal static string InsufficientMemoryOnSave {
            get {
                return ResourceManager.GetString("InsufficientMemoryOnSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The dimensions of a WebP image must be 16383x16383 or less..
        /// </summary>
        internal static string InvalidImageDimensions {
            get {
                return ResourceManager.GetString("InvalidImageDimensions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One of the {0} parameters is not valid..
        /// </summary>
        internal static string InvalidParameterFormat {
            get {
                return ResourceManager.GetString("InvalidParameterFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file is not a valid WebP Image..
        /// </summary>
        internal static string InvalidWebPImage {
            get {
                return ResourceManager.GetString("InvalidWebPImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keep Metadata.
        /// </summary>
        internal static string KeepMetadata_Description {
            get {
                return ResourceManager.GetString("KeepMetadata_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default.
        /// </summary>
        internal static string Preset_Default_DisplayName {
            get {
                return ResourceManager.GetString("Preset_Default_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drawing.
        /// </summary>
        internal static string Preset_Drawing_DisplayName {
            get {
                return ResourceManager.GetString("Preset_Drawing_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Icon.
        /// </summary>
        internal static string Preset_Icon_DisplayName {
            get {
                return ResourceManager.GetString("Preset_Icon_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Photo.
        /// </summary>
        internal static string Preset_Photo_DisplayName {
            get {
                return ResourceManager.GetString("Preset_Photo_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Picture.
        /// </summary>
        internal static string Preset_Picture_DisplayName {
            get {
                return ResourceManager.GetString("Preset_Picture_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preset.
        /// </summary>
        internal static string Preset_DisplayName {
            get {
                return ResourceManager.GetString("Preset_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text.
        /// </summary>
        internal static string Preset_Text_DisplayName {
            get {
                return ResourceManager.GetString("Preset_Text_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quality.
        /// </summary>
        internal static string Quality_DisplayName {
            get {
                return ResourceManager.GetString("Quality_DisplayName", resourceCulture);
            }
        }
    }
}
